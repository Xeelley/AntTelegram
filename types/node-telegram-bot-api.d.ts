export = index;
declare class index {
    static Promise: any;
    static errors: any;
    static messageTypes: any;
    static prefixed: boolean;
    constructor(token: any, options: any);
    token: any;
    options: any;
    addListener(event: any, fn: any, context: any): any;
    addStickerToSet(userId: any, name: any, pngSticker: any, emojis: any, options: any, fileOptions: any): any;
    answerCallbackQuery(callbackQueryId: any, form: any, ...args: any[]): any;
    answerInlineQuery(inlineQueryId: any, results: any, form: any): any;
    answerPreCheckoutQuery(preCheckoutQueryId: any, ok: any, form: any): any;
    answerShippingQuery(shippingQueryId: any, ok: any, form: any): any;
    closeWebHook(): any;
    createNewStickerSet(userId: any, name: any, title: any, pngSticker: any, emojis: any, options: any, fileOptions: any): any;
    deleteChatPhoto(chatId: any, form: any): any;
    deleteChatStickerSet(chatId: any, form: any): any;
    deleteMessage(chatId: any, messageId: any, form: any): any;
    deleteStickerFromSet(sticker: any, form: any): any;
    deleteWebHook(form: any): any;
    downloadFile(fileId: any, downloadDir: any, form: any): any;
    editMessageCaption(caption: any, form: any): any;
    editMessageLiveLocation(latitude: any, longitude: any, form: any): any;
    editMessageReplyMarkup(replyMarkup: any, form: any): any;
    editMessageText(text: any, form: any): any;
    emit(event: any, a1: any, a2: any, a3: any, a4: any, a5: any, ...args: any[]): any;
    eventNames(): any;
    exportChatInviteLink(chatId: any, form: any): any;
    forwardMessage(chatId: any, fromChatId: any, messageId: any, form: any): any;
    getChat(chatId: any, form: any): any;
    getChatAdministrators(chatId: any, form: any): any;
    getChatMember(chatId: any, userId: any, form: any): any;
    getChatMembersCount(chatId: any, form: any): any;
    getFile(fileId: any, form: any): any;
    getFileLink(fileId: any, form: any): any;
    getFileStream(fileId: any, form: any): any;
    getGameHighScores(userId: any, form: any): any;
    getMe(form: any): any;
    getStickerSet(name: any, form: any): any;
    getUpdates(form: any, ...args: any[]): any;
    getUserProfilePhotos(userId: any, form: any, ...args: any[]): any;
    getWebHookInfo(form: any): any;
    hasOpenWebHook(): any;
    initPolling(): any;
    isPolling(): any;
    kickChatMember(chatId: any, userId: any, form: any): any;
    leaveChat(chatId: any, form: any): any;
    listenerCount(event: any): any;
    listeners(event: any): any;
    off(event: any, fn: any, context: any, once: any): any;
    on(event: any, listener: any): void;
    onReplyToMessage(chatId: any, messageId: any, callback: any): any;
    onText(regexp: any, callback: any): void;
    once(event: any, fn: any, context: any): any;
    openWebHook(): any;
    pinChatMessage(chatId: any, messageId: any, form: any): any;
    processUpdate(update: any): void;
    promoteChatMember(chatId: any, userId: any, form: any): any;
    removeAllListeners(event: any): any;
    removeListener(event: any, fn: any, context: any, once: any): any;
    removeReplyListener(replyListenerId: any): any;
    removeTextListener(regexp: any): any;
    restrictChatMember(chatId: any, userId: any, form: any): any;
    sendAudio(chatId: any, audio: any, options: any, fileOptions: any): any;
    sendChatAction(chatId: any, action: any, form: any): any;
    sendContact(chatId: any, phoneNumber: any, firstName: any, form: any): any;
    sendDocument(chatId: any, doc: any, options: any, fileOptions: any): any;
    sendGame(chatId: any, gameShortName: any, form: any): any;
    sendInvoice(chatId: any, title: any, description: any, payload: any, providerToken: any, startParameter: any, currency: any, prices: any, form: any): any;
    sendLocation(chatId: any, latitude: any, longitude: any, form: any): any;
    sendMediaGroup(chatId: any, media: any, options: any): any;
    sendMessage(chatId: any, text: any, form: any): any;
    sendPhoto(chatId: any, photo: any, options: any, fileOptions: any): any;
    sendSticker(chatId: any, sticker: any, options: any, fileOptions: any): any;
    sendVenue(chatId: any, latitude: any, longitude: any, title: any, address: any, form: any): any;
    sendVideo(chatId: any, video: any, options: any, fileOptions: any): any;
    sendVideoNote(chatId: any, videoNote: any, options: any, fileOptions: any): any;
    sendVoice(chatId: any, voice: any, options: any, fileOptions: any): any;
    setChatDescription(chatId: any, description: any, form: any): any;
    setChatPhoto(chatId: any, photo: any, options: any, fileOptions: any): any;
    setChatStickerSet(chatId: any, stickerSetName: any, form: any): any;
    setChatTitle(chatId: any, title: any, form: any): any;
    setGameScore(userId: any, score: any, form: any): any;
    setStickerPositionInSet(sticker: any, position: any, form: any): any;
    setWebHook(url: any, options: any, fileOptions: any): any;
    startPolling(options: any): any;
    stopMessageLiveLocation(form: any): any;
    stopPolling(options: any): any;
    unbanChatMember(chatId: any, userId: any, form: any): any;
    unpinChatMessage(chatId: any, form: any): any;
    uploadStickerFile(userId: any, pngSticker: any, options: any, fileOptions: any): any;
}
declare namespace index {
    class EventEmitter {
        // Circular reference from index.EventEmitter
        static EventEmitter: any;
        static prefixed: boolean;
        addListener(event: any, fn: any, context: any): any;
        emit(event: any, a1: any, a2: any, a3: any, a4: any, a5: any, ...args: any[]): any;
        eventNames(): any;
        listenerCount(event: any): any;
        listeners(event: any): any;
        off(event: any, fn: any, context: any, once: any): any;
        on(event: any, fn: any, context: any): any;
        once(event: any, fn: any, context: any): any;
        removeAllListeners(event: any): any;
        removeListener(event: any, fn: any, context: any, once: any): any;
    }
}
